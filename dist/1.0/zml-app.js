import"./device-polyfill.js";import{h as e,l as s,a as t}from"./fileTransfer-plugin-j54i0AhX.js";import{M as o,w as i}from"./message-wrapper-C2vsczgN.js";import{getPackageInfo as n}from"./app.js";import{b as a}from"./ble-Cn2XHbQ2.js";import{log as r}from"./utils.js";import"./utils-BniZYMK7.js";import"./event-41D0pP7K.js";import"./data.js";import"./_constants-Cre2CkpB.js";const p=20,l=0;const g=[s(),function appPlugin(s){const t=function createDeviceMessage(){const e=new o({appId:n().appId,appDevicePort:p,appSidePort:l,ble:a,logger:r.getLogger("device-message")});return i(e,r.getLogger("message-builder-device"))}();return{onCreate(){this.messaging=this.globalData.messaging=t,this._onCall=this.onCall?.bind(this),this._onRequest=this.onRequest?.bind(this),this.messaging.onCall(this._onCall).onRequest(this._onRequest).connect()},onDestroy(){this.messaging.offOnCall().offOnRequest().disConnect()},request(e,s={}){return this.messaging.request(e,s)},call(e){return this.messaging.call(e)},httpRequest:e}}(),t()];function BaseApp(e){const s={};return g.forEach((e=>Object.assign(s,e))),{...e,...s,onCreate(...s){g.forEach((e=>e.onCreate?.apply(this,s))),e.onCreate?.apply(this,s)},onDestroy(...s){e.onDestroy?.apply(this,s),g.reverse().forEach((e=>e.onDestroy?.apply(this,s)))}}}export{BaseApp};
