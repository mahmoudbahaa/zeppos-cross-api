function len(n){return n.byteLength}function allocOfBin(n=0){return Buffer.alloc(n).buffer}function allocOfBuf(n=0){return Buffer.alloc(n)}function json2buf(n){return str2buf(json2str(n))}function json2bin(n){return str2bin(json2str(n))}function json2str(n){return JSON.stringify(n)}function buf2json(n,t="utf-8"){return str2json(buf2str(n,t))}function buf2bin(n){return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}function buf2str(n,t="utf-8"){return n.toString(t)}function buf2hex(n){return n.toString("hex")}function bin2buf(n){return Buffer.from(n)}function bin2str(n,t="utf-8"){return buf2str(bin2buf(n),t)}function bin2hex(n){return buf2hex(bin2buf(n))}function bin2json(n,t="utf-8"){return buf2json(bin2buf(n),t)}function str2json(n){return JSON.parse(n)}function str2buf(n,t="utf-8"){return Buffer.from(n,t)}function str2bin(n,t="utf-8"){return buf2bin(str2buf(n,t))}export{allocOfBin,allocOfBuf,bin2buf,bin2hex,bin2json,bin2str,buf2bin,buf2hex,buf2json,buf2str,json2bin,json2buf,json2str,len,str2bin,str2buf,str2json};
