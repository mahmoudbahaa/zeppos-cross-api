import{buf2json as e,json2buf as t,bin2hex as s,str2buf as n,buf2str as r,buf2bin as a}from"./data.js";class EventBus{constructor(){this.listeners=new Map}on(e,t){this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push(t)}off(e,t){if(e)if(t){const s=this.listeners.get(e);if(!s)return;const n=s.findIndex((e=>e===t));n>=0&&s.splice(n,1)}else this.listeners.delete(e)}emit(e,...t){for(const s of this.listeners.get(e)??[])s&&s(...t)}clear(){this.listeners.clear()}once(e,t){const onceCb=(...s)=>{this.off(e,onceCb),t(...s)};this.on(e,onceCb)}count(e){return(this.listeners.get(e)??[]).length}}function Deferred(){const e={canceled:!1};return e.promise=new Promise(((t,s)=>{e.resolve=t,e.reject=s})),e.cancel=()=>{e.canceled=!0,e.reject(new Error("Task canceled"))},e}function isZeppOS(){return"undefined"!=typeof __ZEPPOS__}function isPlainObject(e){return"object"==typeof e&&!Buffer.isBuffer(e)&&!Array.isArray(e)&&null!==e}const i=void 0,o=3584,h=0,d=1,p=1,c=2,u=4,l=5,y=6,f=1,g=1,I=2,T=3,m="empty",k="json",S="text",L="bin",b=0,B=1,E=2,w=3;function getDataType(e){switch(e.toLowerCase()){case k:return E;case S:return B;case L:return w;case m:return b;default:return w}}const U=0,q=1;let C=1e4;function genTraceId(){return C++}let P=1e3;function genSpanId(){return P++}class Session extends EventBus{constructor(e,t,s){super(),this.id=e,this.type=t,this.ctx=s,this.logger=s.logger,this.chunks=[],this.count=-1,this.finishChunk=null}addChunk(e){e.opCode===q&&(this.count=e.seqId+1,this.finishChunk=e),e.payloadLength===e.payload.byteLength?(this.chunks.push(e),this.checkIfReceiveAllChunks()):this.emit("error",Error(`receive chunk data length error, expect ${e.payloadLength} but ${e.payload.byteLength}`))}checkIfReceiveAllChunks(){if(this.count!==this.chunks.length)return;if(!this.finishChunk)return;let e=[];for(let t=0;t<this.count;t++){const s=this.chunks[t];if(!s||s.seqId!==t)return e=null,this.releaseBuf(),void this.emit("error",Error("receive data error"));e.push(s.payload)}this.chunks=[],this.finishChunk.payload=Buffer.concat(e),e=null,this.finishChunk.payloadLength=this.finishChunk.payload.byteLength,this.finishChunk.totalLength===this.finishChunk.payloadLength?this.emit("data",this.finishChunk):this.emit("error",Error(`receive full data length error, expect ${this.finishChunk.payloadLength} but ${this.finishChunk.payload.byteLength}`))}releaseBuf(){this.chunks=[],this.finishChunk=null,this.count=0}}class SessionMgr{constructor(){this.sessions=new Map}key(e){return`${e.id}:${e.type}`}newSession(e,t,s){const n=new Session(e,t,s);return this.sessions.set(this.key(n),n),n}destroy(e){e.releaseBuf(),this.sessions.delete(this.key(e))}has(e,t){return this.sessions.has(this.key({id:e,type:t}))}getById(e,t){return this.sessions.get(this.key({id:e,type:t}))}clear(){this.sessions.clear()}}const D={SUCCESS:0,SHAKE_TIME_OUT:1,BLE_CLOSE:2,APP_CLOSE:3,REQUEST_TIME_OUT:4};class MessageError extends Error{constructor(e,t){super(t),this.code=e}}const v=1,M=2,O=3,j=4;class MessageBuilder extends EventBus{constructor({appId:e=0,appDevicePort:t=20,appSidePort:s=0,ble:n,logger:r}={appId:0,appDevicePort:20,appSidePort:0,ble:void 0,logger:void 0}){super(),this.isDevice=isZeppOS(),this.isSide=!this.isDevice,this.appId=e,this.appDevicePort=t,this.appSidePort=s,this.ble=n,this.logger=r,this.sendMsg=this.getSafeSend(),this.chunkSize=o,this.handlers=new Map,this.shakeTask=null,this.waitingShakePromise=null,this.shakeStatus=v,this.shakeTimer=0,this.sessionMgr=new SessionMgr,this.on("response",(e=>{this.onResponse(e)}))}fork(e=5e3){return this.shakeStatus===M||(this.shakeTask=Deferred(),this.waitingShakePromise=this.shakeTask.promise,this.shakeStatus=v,this.clearShakeTimer(),this.shakeTimer=setTimeout((()=>{this.shakeStatus=j,this.shakeTask.reject(new MessageError(D.SHAKE_TIME_OUT,"shake timeout"))}),e),this.shakeStatus=M,this.sendShake()),this.waitingShakePromise}clearShakeTimer(){this.shakeTimer&&clearTimeout(this.shakeTimer),this.shakeTimer=0}getMessageSize(){return 3600}getMessagePayloadSize(){return o}getMessageHeaderSize(){return 16}buf2Json(t){return e(t)}json2Buf(e){return t(e)}now(e=Date.now()){return function getTimestamp(e=Date.now()){return e%1e7}(e)}connect(e){this.on("message",(e=>{this.onMessage(e)})),this.ble&&this.ble.createConnect(((e,t,s)=>{this.onFragmentData(t)})),e&&e(this)}disConnect(e){this.sendClose(),this.off("message"),this.handlers.clear(),this.ble&&this.ble.disConnect(),e&&e(this)}listen(e){this.appSidePort=getApp().port2,messaging&&messaging.peerSocket.addListener("message",(e=>{this.onMessage(e)})),this.waitingShakePromise=Promise.resolve(),e&&e(this)}buildBin(e){if(e.payload.byteLength>this.chunkSize)throw new Error(`${e.payload.byteLength} greater than max size of ${this.chunkSize}`);const t=this.getMessageHeaderSize()+e.payload.byteLength,s=Buffer.alloc(t);let n=0;return s.writeUInt8(e.flag,n),n+=1,s.writeUInt8(e.version,n),n+=1,s.writeUInt16LE(e.type,n),n+=2,s.writeUInt16LE(e.port1,n),n+=2,s.writeUInt16LE(e.port2,n),n+=2,s.writeUInt32LE(e.appId,n),n+=4,s.writeUInt32LE(e.extra,n),n+=4,s.fill(e.payload,n,e.payload.byteLength+n),s}buildShake(){return this.buildBin({flag:d,version:f,type:p,port1:this.appDevicePort,port2:this.appSidePort,appId:this.appId,extra:0,payload:Buffer.from([this.appId])})}sendShake(){const e=this.buildShake();this.sendMsg(e)}buildClose(){return this.buildBin({flag:d,version:f,type:c,port1:this.appDevicePort,port2:this.appSidePort,appId:this.appId,extra:0,payload:Buffer.from([this.appId])})}sendClose(){const e=this.buildClose();this.sendMsg(e)}readBin(e){const t=Buffer.from(e);let s=0;const n=t.readUInt8(s);s+=1;const r=t.readUInt8(s);s+=1;const a=t.readUInt16LE(s);s+=2;const i=t.readUInt16LE(s);s+=2;const o=t.readUInt16LE(s);s+=2;const h=t.readUInt32LE(s);s+=4;const d=t.readUInt32LE(s);s+=4;return{flag:n,version:r,type:a,port1:i,port2:o,appId:h,extra:d,payload:t.subarray(s)}}buildData(e,t={}){return this.buildBin({flag:d,version:f,type:u,port1:this.appDevicePort,port2:this.appSidePort,appId:this.appId,extra:0,...t,payload:e})}sendBin(e,t=i){t&&this.logger.warn("[RAW] [S] send size=%d bin=%s",e.byteLength,s(e.buffer));if(!this.ble.send(e.buffer,e.byteLength))throw Error("send message error")}sendBinBySide(e,t=i){t&&this.logger.warn("[RAW] [S] send size=%d bin=%s",e.byteLength,s(e.buffer)),messaging.peerSocket.send(e.buffer)}getSafeSend(){return this.isDevice?this.sendBin.bind(this):this.sendBinBySide.bind(this)}sendHmProtocol({requestId:e,dataBin:t,type:s,contentType:n,dataType:r},{messageType:a=u}={}){const i=3518,o=t.byteLength;let h=0;const d=Buffer.alloc(i),p=e||genTraceId(),c=genSpanId();let l=0;const y=Math.ceil(o/i);function genSeqId(){return l++}for(let e=1;e<=y;e++){if(this.errorIfBleDisconnect(),e===y){const e=o-h,i=Buffer.alloc(0+e);t.copy(i,0,h,h+e),h+=e,this.sendDataWithSession({traceId:p,spanId:c,seqId:genSeqId(),payload:i,type:s,opCode:q,totalLength:o,contentType:n,dataType:r},{messageType:a});break}t.copy(d,0,h,h+i),h+=i,this.sendDataWithSession({traceId:p,spanId:c,seqId:genSeqId(),payload:d,type:s,opCode:U,totalLength:o,contentType:n,dataType:r},{messageType:a})}}sendJson({requestId:e=0,json:s,type:n=g,contentType:r,dataType:a}){const i=t(s),o=e||genTraceId();this.sendHmProtocol({requestId:o,dataBin:i,type:n,contentType:r,dataType:a})}sendBuf({requestId:e=0,buf:t,type:s=g,contentType:n,dataType:r}){const a=e||genTraceId();return this.sendHmProtocol({requestId:a,dataBin:t,type:s,contentType:n,dataType:r})}sendText({requestId:e=0,text:t,type:s=g,contentType:r,dataType:a}){const i=n(t),o=e||genTraceId();return this.sendHmProtocol({requestId:o,dataBin:i,type:s,contentType:r,dataType:a})}sendDataWithSession({traceId:e,spanId:t,seqId:s,payload:n,type:r,opCode:a,totalLength:i,contentType:o,dataType:h},{messageType:d}){const p=this.buildPayload({traceId:e,spanId:t,seqId:s,totalLength:i,type:r,opCode:a,payload:n,contentType:o,dataType:h}),c=this.isDevice?this.buildData(p,{type:d}):p;this.sendMsg(c)}buildPayload(e){const t=66+e.payload.byteLength,s=Buffer.alloc(t);let n=0;return s.writeUInt32LE(e.traceId,n),n+=4,s.writeUInt32LE(0,n),n+=4,s.writeUInt32LE(e.spanId,n),n+=4,s.writeUInt32LE(e.seqId,n),n+=4,s.writeUInt32LE(e.totalLength,n),n+=4,s.writeUInt32LE(e.payload.byteLength,n),n+=4,s.writeUInt8(e.type,n),n+=1,s.writeUInt8(e.opCode,n),n+=1,s.writeUInt32LE(this.now(),n),n+=4,s.writeUInt32LE(0,n),n+=4,s.writeUInt32LE(0,n),n+=4,s.writeUInt32LE(0,n),n+=4,s.writeUInt32LE(0,n),n+=4,s.writeUInt32LE(0,n),n+=4,s.writeUInt32LE(0,n),n+=4,s.writeUInt8(e.contentType,n),n+=1,s.writeUInt8(e.dataType,n),n+=1,s.writeUInt16LE(0,n),n+=2,s.writeUInt32LE(0,n),n+=4,s.writeUInt32LE(0,n),n+=4,s.fill(e.payload,n,e.payload.byteLength+n),s}readPayload(e){const t=Buffer.from(e);let s=0;const n=t.readUInt32LE(s);s+=4;const r=t.readUInt32LE(s);s+=4;const a=t.readUInt32LE(s);s+=4;const i=t.readUInt32LE(s);s+=4;const o=t.readUInt32LE(s);s+=4;const h=t.readUInt32LE(s);s+=4;const d=t.readUInt8(s);s+=1;const p=t.readUInt8(s);s+=1;const c=t.readUInt32LE(s);s+=4;const u=t.readUInt32LE(s);s+=4;const l=t.readUInt32LE(s);s+=4;const y=t.readUInt32LE(s);s+=4;const f=t.readUInt32LE(s);s+=4;const g=t.readUInt32LE(s);s+=4;const I=t.readUInt32LE(s);s+=4;const T=t.readUInt8(s);s+=1;const m=t.readUInt8(s);s+=1;const k=t.readUInt16LE(s);s+=2;const S=t.readUInt32LE(s);s+=4;const L=t.readUInt32LE(s);s+=4;return{traceId:n,parentId:r,spanId:a,seqId:i,totalLength:o,payloadLength:h,payloadType:d,opCode:p,contentType:T,dataType:m,timestamp1:c,timestamp2:u,timestamp3:l,timestamp4:y,timestamp5:f,timestamp6:g,timestamp7:I,extra1:k,extra2:S,extra3:L,payload:t.subarray(s)}}onFragmentData(e){const t=this.readBin(e);this.emit("raw",e),t.flag===d&&t.type===p?(this.appSidePort=t.port2,this.emit("shake:response",t),this.clearShakeTimer(),this.shakeTask.resolve(),this.shakeStatus=O):t.flag===d&&t.type===u||t.flag===d&&t.type===l?(this.emit("message",t.payload),this.emit("read",t)):t.flag===d&&t.type===y?this.emit("log",t.payload):t.flag===h||t.flag===d&&t.type===c&&(this.appSidePort=0)}errorIfBleDisconnect(){if(!isZeppOS())return;if(!this.ble.connectStatus())throw new MessageError(D.BLE_CLOSE,"ble disconnect")}errorIfSideServiceDisconnect(){if(isZeppOS()&&!this.appSidePort)throw new MessageError(D.APP_CLOSE,"side service is not running")}getRequestCount(){return this.handlers.size}onResponse(e){const t=this.handlers.get(e.traceId);t&&t(e)}onMessage(e){const t=this.readPayload(e);let s=this.sessionMgr.getById(t.traceId,t.payloadType);s||(s=this.sessionMgr.newSession(t.traceId,t.payloadType,this),s.on("data",(e=>{e.opCode===q&&(e.payloadType===g?this.emit("request",{request:e,response:({data:t,dataType:s})=>{s=void 0===s?e.dataType:getDataType(s),this.response({requestId:e.traceId,contentType:e.contentType,dataType:s,data:t})}}):e.payloadType===I?this.emit("response",e):e.payloadType===T&&this.emit("call",e),this.emit("data",e),this.sessionMgr.destroy(s))})),s.on("error",(e=>{this.sessionMgr.destroy(s),this.emit("error",e)}))),s.addChunk(t)}request(t,s){try{this.errorIfBleDisconnect()}catch(e){return Promise.reject(e)}return this.waitingShakePromise.then((()=>{this.errorIfBleDisconnect(),this.errorIfSideServiceDisconnect();let n=L;"string"==typeof t?n=S:isPlainObject(t)?n=k:(t instanceof ArrayBuffer||ArrayBuffer.isView(t)||Buffer.isBuffer(t))&&(n=L);const a={timeout:6e4,contentType:n,dataType:n},i=genTraceId(),o=Deferred();s=Object.assign(a,s);let h=setTimeout((()=>{h=null,o.reject(new MessageError(D.TIMEOUT,"request timeout"))}),s.timeout);return this.handlers.set(i,(({traceId:t,payload:s,dataType:n})=>{let a;switch(this.errorIfBleDisconnect(),this.errorIfSideServiceDisconnect(),n){case B:a=r(s);break;case w:a=s;break;case E:a=e(s);break;default:a=s}o.resolve(a)})),Buffer.isBuffer(t)?this.sendBuf({requestId:i,buf:t,type:g,contentType:w,dataType:getDataType(s.dataType)}):t instanceof ArrayBuffer||ArrayBuffer.isView(t)?this.sendBuf({requestId:i,buf:Buffer.from(t),type:g,contentType:w,dataType:getDataType(s.dataType)}):getDataType(s.contentType)===E?this.sendJson({requestId:i,json:t,type:g,contentType:E,dataType:getDataType(s.dataType)}):getDataType(s.contentType)===B?this.sendText({requestId:i,text:t,type:g,contentType:B,dataType:getDataType(s.dataType)}):this.sendBuf({requestId:i,buf:Buffer.from(t),type:g,contentType:w,dataType:getDataType(s.dataType)}),o.promise.catch((e=>{throw e})).finally((()=>{h&&(clearTimeout(h),h=null),this.handlers.delete(i)}))}))}response({requestId:e,contentType:t,dataType:s,data:n}){w===s?this.sendBuf({requestId:e,buf:n,type:I,contentType:t,dataType:s}):B===s?this.sendText({requestId:e,text:n,type:I,contentType:t,dataType:s}):E===s?this.sendJson({requestId:e,json:n,type:I,contentType:t,dataType:s}):this.sendBuf({requestId:e,buf:n,type:I,contentType:t,dataType:w})}call(e){let t=E;return"string"==typeof e?t=B:isPlainObject(e)?t=E:(e instanceof ArrayBuffer||ArrayBuffer.isView(e)||Buffer.isBuffer(e))&&(t=w),this.waitingShakePromise.then((()=>Buffer.isBuffer(e)?this.sendBuf({buf:e,type:T,contentType:w,dataType:b}):e instanceof ArrayBuffer||ArrayBuffer.isView(e)?this.sendBuf({buf:Buffer.from(e),type:T,contentType:w,dataType:b}):t===E?this.sendJson({json:e,type:T,contentType:E,dataType:b}):t===B?this.sendText({text:e,type:T,contentType:B,dataType:b}):this.sendBuf({buf:Buffer.from(e),type:T,contentType:w,dataType:b})))}}const x="hmrpcv1";function wrapperMessage(t,s){return{shakeTimeout:5e3,requestTimeout:6e4,transport:t,onCall(s){return s?(t.on("call",(({contentType:t,payload:n})=>{switch(t){case E:n=e(n);break;case B:n=r(n);break;default:n=a(n)}s&&s(n)})),this):this},offOnCall(e){return t.off("call",e),this},call(e){return isZeppOS()&&t.fork(this.shakeTimeout),e=isPlainObject(e)?e.contentType?e:{jsonrpc:x,...e}:e,t.call(e)},onRequest(s){return s?(t.on("request",(t=>{let{payload:n}=t.request;switch(t.request.contentType){case E:n=e(n);break;case B:n=r(n);break;default:n=a(n)}s&&s(n,((e,s,r={})=>t.request.contentType===E&&n?.jsonrpc===x?e?t.response({data:{jsonrpc:x,error:e}}):t.response({data:{jsonrpc:x,result:s}}):t.response({data:s,...r})))})),this):this},cancelAllRequest(){return t.off("response"),this},offOnRequest(e){return t.off("request",e),this},request(e,s={}){return isZeppOS()&&t.fork(this.shakeTimeout),e=isPlainObject(e)?s.contentType?e:{jsonrpc:x,...e}:e,t.request(e,{timeout:this.requestTimeout,...s}).then((e=>{if(!isPlainObject(e)||e.jsonrpc!==x)return e;const{error:t,result:s}=e;if(t)throw t;return s}))},connect(){return t.connect((()=>{})),this},disConnect(){return this.cancelAllRequest(),this.offOnRequest(),this.offOnCall(),t.disConnect((()=>{})),this},start(){return t.listen((()=>{})),this},stop(){return this.cancelAllRequest(),this.offOnRequest(),this.offOnCall(),t.disConnect((()=>{})),this}}}export{MessageBuilder as M,wrapperMessage as w};
