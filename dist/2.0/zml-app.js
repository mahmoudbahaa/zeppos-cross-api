import"./device-polyfill.js";import{h as s,l as e,a as t}from"./fileTransfer-plugin-B3SttrE5.js";import{M as o,w as i}from"./message-wrapper-DEsCtQpq.js";import"./app.js";import{b as a}from"./ble-DliQgyC7.js";import"./utils.js";import{getPackageInfo as n}from"@zos/app";import{log as r}from"@zos/utils";import"./data.js";import"./_constants-Cre2CkpB.js";import"@zos/ble";const p=20,l=0;const g=[e(),function appPlugin(e){const t=function createDeviceMessage(){const s=new o({appId:n().appId,appDevicePort:p,appSidePort:l,ble:a,logger:r.getLogger("device-message")});return i(s,r.getLogger("message-builder-device"))}();return{onCreate(){this.messaging=this.globalData.messaging=t,this._onCall=this.onCall?.bind(this),this._onRequest=this.onRequest?.bind(this),this.messaging.onCall(this._onCall).onRequest(this._onRequest).connect()},onDestroy(){this.messaging.offOnCall().offOnRequest().disConnect()},request(s,e={}){return this.messaging.request(s,e)},call(s){return this.messaging.call(s)},httpRequest:s}}(),t()];function BaseApp(s){const e={};return g.forEach((s=>Object.assign(e,s))),{...s,...e,onCreate(...e){g.forEach((s=>s.onCreate?.apply(this,e))),s.onCreate?.apply(this,e)},onDestroy(...e){s.onDestroy?.apply(this,e),g.reverse().forEach((s=>s.onDestroy?.apply(this,e)))}}}export{BaseApp};
