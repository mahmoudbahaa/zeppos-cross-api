import{h as e,l as s,a as t}from"./fileTransfer-plugin-BEm8szOW.js";import{M as o,w as r}from"./messageWrapper-y3sy9FDM.js";import{getPackageInfo as n}from"@zos/app";import{b as i}from"./ble-DU8U7ySX.js";import{log as a}from"@zos/utils";import"./file-transfer-gYmh_mcf.js";import"@zos/ble/TransferFile";import"./data.js";import"@zos/ble";const l=[s(),function(s){const t=function(){const e=new o({appId:n().appId,appDevicePort:20,appSidePort:0,ble:i,logger:a.getLogger("device-message")});return r(e,a.getLogger("message-builder-device"))}();return{onCreate(){this.messaging=this.globalData.messaging=t,this._onCall=this.onCall?.bind(this),this._onRequest=this.onRequest?.bind(this),this.messaging.onCall(this._onCall).onRequest(this._onRequest).connect()},onDestroy(){this.messaging.offOnCall().offOnRequest().disConnect()},request(e,s={}){return this.messaging.request(e,s)},call(e){return this.messaging.call(e)},httpRequest:e}}(),t()];function p(e){const s={};return l.forEach((e=>Object.assign(s,e))),{...e,...s,onCreate(...s){l.forEach((e=>e.onCreate?.apply(this,s))),e.onCreate?.apply(this,s)},onDestroy(...s){e.onDestroy?.apply(this,s),l.reverse().forEach((e=>e.onDestroy?.apply(this,s)))}}}export{p as BaseApp};
