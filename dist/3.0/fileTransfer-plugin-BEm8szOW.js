import{log as e}from"@zos/utils";import{g as i}from"./file-transfer-gYmh_mcf.js";import r from"@zos/ble/TransferFile";function o(){return{onInit(){this.logger=e.getLogger(this.name||"Page"),this.log=(...e)=>{this.logger.log(...e)},this.error=(...e)=>{e[0]instanceof Error?this.logger.error(...e):this.logger.error({},...e)},this.debug=(...e)=>{this.logger.debug(...e)}},onCreate(){this.logger=e.getLogger(this.name||"app.js"),this.log=(...e)=>{this.logger.log(...e)},this.error=(...e)=>{e[0]instanceof Error?this.logger.error(...e):this.logger.error({},...e)},this.debug=(...e)=>{this.logger.debug(...e)}}}}function t(e,i={}){return this.messaging.request({method:"http.request",params:e},i)}const s=i(new r);function n(e){return{onCreate(){s.onFile(this.onReceivedFile?.bind(this))},onDestroy(){s.offFile()},sendFile:(e,i)=>s.sendFile(e,i)}}function g(e){return{onInit(){this._onReceivedFile=this.onReceivedFile?.bind(this),s.onFile(this._onReceivedFile)},onDestroy(){this._onReceivedFile&&s.offFile(this._onReceivedFile)},sendFile:(e,i)=>s.sendFile(e,i)}}export{n as a,t as h,o as l,g as p};
